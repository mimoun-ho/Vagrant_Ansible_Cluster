# Pour chaque hôte, Ansible détermine le groupe de services auquel il appartient en utilisant la variable match_group.
# Ensuite, Ansible récupère la liste des ports du fichier de variables basé sur ce groupe de services.
# Le module firewalld est ensuite appelé pour chaque port dans cette liste, configurant le pare-feu pour permettre le trafic sur ces ports.
# Chaque type de noeud aura uniquement les ports nécessaires ouverts

- name: Démarrer et activer firewalld
  systemd:
    name: firewalld
    state: started
    enabled: true
    
- name: Ouvrir les ports nécessaires pour chaque service
  firewalld:
    port: "{{ item }}"
    permanent: true
    state: enabled
    immediate: true
  loop: "{{ query('dict', service_ports) | selectattr('key', 'in', match_groups) | map(attribute='value') | flatten }}"
  when: match_groups | length > 0
  vars:
    match_groups: "{{ group_names | map('regex_replace', '_nodes$', '') | map('regex_replace', '^.*_', '') | select('in', service_ports.keys()) | list }}"


# group_names: Liste des groupes auxquels appartient l'hôte courant.
# map('regex_replace', '_nodes$', ''): Supprime le suffixe _nodes des noms de groupe.
# map('regex_replace', '^.*_', ''): Supprime tout préfixe terminant par _ (extrait la partie significative du nom).
# select('in', service_ports.keys()): Sélectionne les éléments qui correspondent à une clé dans service_ports.

